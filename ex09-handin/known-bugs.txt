x When listening, the menu doesn't hang around anymore, but the
  interface freezes nonetheless.

x Because the DisconnectEvent MyTextEvent, it has to call its
  constructor with a length. This is ugly and a result of implementation
  inheritance. Bad.

- Exceptions are propagated further or editor is killed after printing
  stacktrace. -- No error handling.

- Just tagged stuff as Serializable without caring for the implications.

- Sometimes upon connecting after a disconnect:
  IllegalArgumentException: Invalid remove
  -- Does area.setText("") trigger TextRemoveEvent? Make an event
  instead, but also difficult.

- Some of the queue stuff would be better done with observer pattern.

x Sometimes after disconnecting message in both editors, sometimes not.

- Rename MyTextEvent to something

- Rename *replay* to *display*

- Make display queue and outqueue more specific

- With the boolean server flag, edits close to each other can be
  unintuitive. Priorities might fix it.

- Inserts into region to be deleted are thrown away. -- Not very nice.

- If the TextRemoveEvent were more intelligent (fx understand negative
  lengths), we might be able to merge some cases in xform.

- The transformer is not correct. -- Invalid inserts and removals
  happen.

- Consider passing 'this' to the EventReplayer and startCommunications
  instead of everything separately.
